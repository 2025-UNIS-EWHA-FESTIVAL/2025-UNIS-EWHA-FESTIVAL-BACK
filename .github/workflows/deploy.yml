name: Deploy to ECR and EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build without test
        run: ./gradlew clean build -x test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Log in to ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          aws-region: ap-northeast-2

      - name: Build and push Docker image to ECR
        run: |
          IMAGE_URI=154006474458.dkr.ecr.ap-northeast-2.amazonaws.com/unis-fest-back:latest
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      # ✅ 민감정보 포함한 admin.env 생성 (Secrets 기반, 안전)
      - name: Upload admin.env to EC2 via SSM (secure)
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=tag:Role,Values=unis-auto-scaling" \
            --comment "Create secure admin.env on EC2" \
            --parameters 'commands=[
              "echo \"DB_URL=${{ secrets.DB_URL }}\" > /home/ec2-user/admin.env",
              "echo \"DB_USERNAME=${{ secrets.DB_USERNAME }}\" >> /home/ec2-user/admin.env",
              "echo \"DB_PASSWORD=${{ secrets.DB_PASSWORD }}\" >> /home/ec2-user/admin.env",
              "echo \"ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }}\" >> /home/ec2-user/admin.env",
              "echo \"ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}\" >> /home/ec2-user/admin.env",
              "echo \"AWS_ACCESS_KEY=${{ secrets.AWS_S3_ACCESS_KEY_ID }}\" >> /home/ec2-user/admin.env",
              "echo \"AWS_SECRET_KEY=${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}\" >> /home/ec2-user/admin.env",
              "echo \"AWS_REGION=ap-northeast-2\" >> /home/ec2-user/admin.env",
              "echo \"S3_BUCKET=${{ secrets.S3_BUCKET }}\" >> /home/ec2-user/admin.env",
              "chmod 600 /home/ec2-user/admin.env",
              "chown ec2-user:ec2-user /home/ec2-user/admin.env"
            ]' \
            --region ap-northeast-2

      # ✅ deploy.sh 실행 (이미 AMI에 포함되어 있음)
      - name: Deploy latest container directly via SSM (no deploy.sh)
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=tag:Role,Values=unis-auto-scaling" \
            --comment "Run latest container directly via SSM" \
            --parameters 'commands=[
              "docker stop unis-app || true",
              "docker rm unis-app || true",
              "docker rmi 154006474458.dkr.ecr.ap-northeast-2.amazonaws.com/unis-fest-back:latest || true",
              "docker system prune -af || true",
              "aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 154006474458.dkr.ecr.ap-northeast-2.amazonaws.com",
              "docker pull 154006474458.dkr.ecr.ap-northeast-2.amazonaws.com/unis-fest-back:latest",
              "docker run --pull always -d --name unis-app -p 80:8080 --env-file /home/ec2-user/admin.env -e TZ=Asia/Seoul 154006474458.dkr.ecr.ap-northeast-2.amazonaws.com/unis-fest-back:latest"
            ]' \
            --region ap-northeast-2